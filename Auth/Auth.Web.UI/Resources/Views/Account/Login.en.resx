<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="1" xml:space="preserve">
    <value />
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ChangePasswordConfirmation" xml:space="preserve">
    <value>Change password confirmation</value>
  </data>
  <data name="ClickHereToLogIn" xml:space="preserve">
    <value>click here to log in</value>
  </data>
  <data name="ClickToLogInAdvisor" xml:space="preserve">
    <value>Click {0} to log in to Advisor</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="ContinueToWebsite" xml:space="preserve">
    <value>Continue to website</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Learn more</value>
  </data>
  <data name="CompanyLogin" xml:space="preserve">
    <value>Company Login:</value>
  </data>
  <data name="UnitedStates" xml:space="preserve">
    <value>United States</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreatePassword" xml:space="preserve">
    <value>Create password</value>
  </data>
  <data name="CreatePasswordConfirmation" xml:space="preserve">
    <value>Create password confirmation</value>
  </data>
  <data name="DontShowThisPageAgain" xml:space="preserve">
    <value>Don`t show this page again</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailNotExist" xml:space="preserve">
    <value>Email doesn't exist.</value>
  </data>
  <data name="EnterYourEmail" xml:space="preserve">
    <value>Enter your email</value>
  </data>
  <data name="ForgotPasswordConfirmation" xml:space="preserve">
    <value>Forgot Password Confirmation</value>
  </data>
  <data name="ForgotYourPasswordQuestion" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="Here" xml:space="preserve">
    <value>Here</value>
  </data>
  <data name="InvalidLoginAttempt" xml:space="preserve">
    <value>Invalid login attempt</value>
  </data>
  <data name="InvitationHasExpired" xml:space="preserve">
    <value>The invitation has expired. Please use {0} link to try again.</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="2" xml:space="preserve">
    <value />
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordConfirmationPasswordDontMatch" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="PasswordMustBe" xml:space="preserve">
    <value>A minimum 8-characters password, that contains a combination of letter, digit and a special character is required.</value>
  </data>
  <data name="PasswordQuestion" xml:space="preserve">
    <value>Password?</value>
  </data>
  <data name="PleaseCheckYourEmailToResetYourPassword" xml:space="preserve">
    <value>Please check your email to reset your password.</value>
  </data>
  <data name="Portal" xml:space="preserve">
    <value>portal</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="ResetPasswordConfirmation" xml:space="preserve">
    <value>Reset password confirmation</value>
  </data>
  <data name="SendLink" xml:space="preserve">
    <value>Send link</value>
  </data>
  <data name="TheEmailNotValid" xml:space="preserve">
    <value>The Email field is not a valid e-mail address.</value>
  </data>
  <data name="UnableFindUser" xml:space="preserve">
    <value>Unable to find user with the given email</value>
  </data>
  <data name="YourPasswordHasBeenChange" xml:space="preserve">
    <value>Your password has been change. Please {0}</value>
  </data>
  <data name="YourPasswordHasBeenCreated" xml:space="preserve">
    <value>Your password has been created. Now you can login with your credentials to {0}</value>
  </data>
  <data name="YourPasswordHasBeenReset" xml:space="preserve">
    <value>Your password has been reset. Please {0}</value>
  </data>
  <data name="YourPasswordHasExpired" xml:space="preserve">
    <value>Your password has expired</value>
  </data>
  <data name="EmailIsDisabled" xml:space="preserve">
    <value>This email is disabled. You cannot reset your password.</value>
  </data>
</root>