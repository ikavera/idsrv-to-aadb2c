@model Auth.Web.UI.Quickstart.Account.CreatePasswordViewModel
@using Auth.Web.UI.Config
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewBag.Title = Localizer["CreatePassword"];
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
    ViewData["Title"] = "My Super Company";
}


@using (Html.BeginForm("CreatePassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <h1 class="page-title">@ViewBag.Title</h1>
    <br />

    @Html.ValidationSummary("", new { @class = "text-danger" })
    if (ViewBag.IsTokenExpired)
    {
        <div class="text-danger">
            @Html.Raw(string.Format(Localizer["InvitationHasExpired"].Value, HtmlContentExtend.GetString(Html.ActionLink(Localizer["PasswordQuestion"].Value, "ForgotPassword", new { clientId = ViewBag.ClientAuthId }))))
        </div>
        <br />
    }
    @Html.HiddenFor(model => model.Code)
    @Html.HiddenFor(model => model.UserId)
    @Html.HiddenFor(model => model.ClientAuthId)

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
            <div class="password-wrapper">
                @Html.PasswordFor(m => m.Password, new { @class = "pass-input", id = "psw-input" })
                <div class="visibility-wrapper">
                    <span id="show-psw-img" class="visibility visibility-on"></span>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
            <div class="password-wrapper">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "pass-input", id = "psw-conf-input" })
                <div class="visibility-wrapper">
                    <span id="show-conf-psw-img" class="visibility visibility-on"></span>
                </div>
            </div>
        </div>
    </div>
    <script>
        (function () {
            const showPswBtn = document.querySelector(".password-wrapper #show-psw-img");
            const showConfPswBtn = document.querySelector(".password-wrapper #show-conf-psw-img");
            getHandler = function (inputId) {
                return function (event) {
                    const isVisible = !this.classList.contains("visibility-on");
                    const passwordInput = document.querySelector(".password-wrapper #" + inputId);
                    if (isVisible) {
                        passwordInput.type = 'password';
                        this.classList.remove('visibility-off');
                        this.classList.add('visibility-on');
                    } else {
                        passwordInput.type = 'text';
                        this.classList.remove('visibility-on');
                        this.classList.add('visibility-off');

                    }
                }
            }
            showPswBtn.addEventListener("click", getHandler('psw-input'), false);
            showConfPswBtn.addEventListener("click", getHandler('psw-conf-input'), false);
        })();
    </script>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="sbmtBtn" class="btn btn-primary pull-right" value="@Localizer["Create"]" />
        </div>
    </div>
}


@section Scripts {
    <script src="~/lib/jquery.validate.min.js"></script>

    <script>
        $(function () {
            function updateState() {
                var isVisible = $('#Password').val().length > 0 && $('#ConfirmPassword').val().length > 0;
                $("#sbmtBtn").prop('disabled', !isVisible);
            }

            $('#Password,#ConfirmPassword').on('input', updateState);
            updateState();
        });
    </script>
}
